// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`add rule allow 1`] = `
<RuleEditor
  addAction={21}
  editAction={23}
  initialRules={
    Array [
      Object {
        "pattern": "pattern1",
        "ruleType": "CREATE",
      },
    ]
  }
  removeAction={22}
  title="Expected End Products"
>
  <Styled(styled.section)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kEYyzF",
            "isStatic": false,
            "lastClassName": "iojSyD",
            "rules": Array [
              "
  margin: 2rem 0;
  display: flex;
  align-items: center;
  width: 100%;
  flex-direction: column;
  padding: 0 1rem 1rem;
  border: 1px solid ",
              [Function],
              ";

  background: ",
              [Function],
              ";

  li ~ li {
    margin-top: 1rem;
  }

  li ~ section {
    margin-top: 1rem;
  }
",
            ],
          },
          "displayName": "Styled(styled.section)",
          "foldedComponentIds": Array [
            "sc-kAzzGY",
          ],
          "render": [Function],
          "styledComponentId": "sc-kEYyzF",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <section
        className="sc-kAzzGY sc-kEYyzF iojSyD"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kpOJdX",
                  "isStatic": false,
                  "lastClassName": "kVlxUP",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kpOJdX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-kpOJdX kVlxUP"
            >
              <Styled(styled.header)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kkGfuU",
                        "isStatic": false,
                        "lastClassName": "gXTgbY",
                        "rules": Array [
                          "
  position: relative;
  display: inline-flex;
  font-size: 0.9rem;
  top: -1rem;
  color: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  padding: 0.25rem 2rem 0.4rem;
",
                        ],
                      },
                      "displayName": "Styled(styled.header)",
                      "foldedComponentIds": Array [
                        "sc-dxgOiQ",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kkGfuU",
                      "target": "header",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <header
                    className="sc-dxgOiQ sc-kkGfuU gXTgbY"
                  >
                    Expected End Products
                  </header>
                </StyledComponent>
              </Styled(styled.header)>
              <Styled(styled.button)
                data-testhook-id="add-rule"
                onClick={[Function]}
              >
                <StyledComponent
                  data-testhook-id="add-rule"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iAyFgw",
                        "isStatic": false,
                        "lastClassName": "RTKVq",
                        "rules": Array [
                          "
  position: relative;
  top: -1rem;
  border: 0;
  right: 0;

  &:hover {
    cursor: pointer;
    transform: scale(0.8);
  }

  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "Styled(styled.button)",
                      "foldedComponentIds": Array [
                        "sc-kGXeez",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iAyFgw",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <button
                    className="sc-kGXeez sc-iAyFgw RTKVq"
                    data-testhook-id="add-rule"
                    onClick={[Function]}
                  >
                    <PlusIcon
                      color="#1779ba"
                      size={24}
                    >
                      <svg
                        height={24}
                        version="1.1"
                        viewBox="0 0 32 32"
                        width={24}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <title>
                          plus
                        </title>
                        <path
                          d="M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z"
                          fill="#1779ba"
                        />
                      </svg>
                    </PlusIcon>
                  </button>
                </StyledComponent>
              </Styled(styled.button)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.ul>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jKJlTe",
                  "isStatic": false,
                  "lastClassName": "dKJUNv",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: 100%;

  li ~ ",
                    ".sc-cSHVUG",
                    " {
    margin-top: 1rem;
  }
",
                  ],
                },
                "displayName": "styled.ul",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jKJlTe",
                "target": "ul",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <ul
              className="sc-jKJlTe dKJUNv"
            >
              <li>
                <Styled(styled.header)
                  clickable={false}
                >
                  <StyledComponent
                    clickable={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-hSdWYo",
                          "isStatic": false,
                          "lastClassName": "kKngBj",
                          "rules": Array [
                            "
  border: 1px solid
    ",
                            [Function],
                            ";
  font-size: 1rem;
  padding: 0.5rem;
  width: 100%;
  background-color: ",
                            [Function],
                            ";
  display: flex;
  align-items: center;
  justify-content: space-between;

  span {
    margin: 0 0.5rem;
  }

  ",
                            ".sc-bdVaJa",
                            " {
    margin: 0;
  }

  ",
                            ".sc-bwzfXH",
                            " {
    margin: 0.5rem 0 0;
  }

  &:hover {
    ",
                            [Function],
                            ";
    border: 1px solid ",
                            [Function],
                            ";
  }
",
                          ],
                        },
                        "displayName": "Styled(styled.header)",
                        "foldedComponentIds": Array [
                          "sc-hMqMXs",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-hSdWYo",
                        "target": "header",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <header
                      className="sc-hMqMXs sc-hSdWYo kKngBj"
                    >
                      <styled.span>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-eNQAEJ",
                                "isStatic": false,
                                "lastClassName": "dhlUIc",
                                "rules": Array [
                                  "
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-eNQAEJ",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="sc-eNQAEJ dhlUIc"
                          >
                            create - pattern1
                          </span>
                        </StyledComponent>
                      </styled.span>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-chPdSV",
                                "isStatic": false,
                                "lastClassName": "eWUxCg",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-chPdSV",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-chPdSV eWUxCg"
                          >
                            <Styled(styled.button)
                              data-testhook-id="edit-rule-0"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                data-testhook-id="edit-rule-0"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-cvbbAY",
                                      "isStatic": false,
                                      "lastClassName": "ExiAf",
                                      "rules": Array [
                                        "
  display: inline-flex;
  background: none;
  border: 0;

  &:hover {
    svg {
      cursor: pointer;
      transform: scale(0.8);
    }
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(styled.button)",
                                    "foldedComponentIds": Array [
                                      "sc-kgoBCf",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-cvbbAY",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="sc-kgoBCf sc-cvbbAY ExiAf"
                                  data-testhook-id="edit-rule-0"
                                  onClick={[Function]}
                                >
                                  <EditIcon
                                    color="#1779ba"
                                    size={26}
                                  >
                                    <svg
                                      height={26}
                                      version="1.1"
                                      viewBox="0 0 24 24"
                                      width={26}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M21.561 5.318l-2.879-2.879c-0.293-0.293-0.677-0.439-1.061-0.439-0.385 0-0.768 0.146-1.061 0.439l-3.56 3.561h-9c-0.552 0-1 0.447-1 1v13c0 0.553 0.448 1 1 1h13c0.552 0 1-0.447 1-1v-9l3.561-3.561c0.293-0.293 0.439-0.677 0.439-1.061s-0.146-0.767-0.439-1.060zM11.5 14.672l-2.172-2.172 6.293-6.293 2.172 2.172-6.293 6.293zM8.939 13.333l1.756 1.728-1.695-0.061-0.061-1.667zM16 19h-11v-11h6l-3.18 3.18c-0.293 0.293-0.478 0.812-0.629 1.289-0.16 0.5-0.191 1.056-0.191 1.47v3.061h3.061c0.414 0 1.108-0.1 1.571-0.29 0.464-0.19 0.896-0.347 1.188-0.64l3.18-3.070v6zM18.5 7.672l-2.172-2.172 1.293-1.293 2.171 2.172-1.292 1.293z"
                                        fill="#1779ba"
                                      />
                                    </svg>
                                  </EditIcon>
                                </button>
                              </StyledComponent>
                            </Styled(styled.button)>
                            <Styled(styled.button)
                              data-testhook-id="delete-rule-0"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                data-testhook-id="delete-rule-0"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-eHgmQL",
                                      "isStatic": false,
                                      "lastClassName": "yHvcD",
                                      "rules": Array [
                                        "
  display: inline-flex;
  background: none;
  border: 0;

  &:hover {
    svg {
      cursor: pointer;
      transform: scale(0.8);
    }
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(styled.button)",
                                    "foldedComponentIds": Array [
                                      "sc-kgoBCf",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-eHgmQL",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="sc-kgoBCf sc-eHgmQL yHvcD"
                                  data-testhook-id="delete-rule-0"
                                  onClick={[Function]}
                                >
                                  <RemoveIcon
                                    color="#1779ba"
                                    size={24}
                                  >
                                    <svg
                                      height={24}
                                      version="1.1"
                                      viewBox="0 0 32 32"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <title>
                                        trash
                                      </title>
                                      <path
                                        d="M29.98 6.819c-0.096-1.57-1.387-2.816-2.98-2.816h-3v-1.002c0-1.657-1.344-3-3-3h-10c-1.657 0-3 1.343-3 3v1.001h-3c-1.595 0-2.885 1.246-2.981 2.816h-0.019v2.183c0 1.104 0.896 2 2 2v0 17c0 2.209 1.791 4 4 4h16c2.209 0 4-1.791 4-4v-17c1.104 0 2-0.896 2-2v-2.182h-0.020zM10 3.002c0-0.553 0.447-1 1-1h10c0.553 0 1 0.447 1 1v1h-12v-1zM26 28.002c0 1.102-0.898 2-2 2h-16c-1.103 0-2-0.898-2-2v-17h20v17zM28 8.001v1h-24v-1.999c0-0.553 0.447-1 1-1h22c0.553 0 1 0.447 1 1v0.999zM9 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM9 14.005h2v13h-2v-13zM15 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM15 14.005h2v13h-2v-13zM21 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM21 14.005h2v13h-2v-13z"
                                        fill="#1779ba"
                                      />
                                    </svg>
                                  </RemoveIcon>
                                </button>
                              </StyledComponent>
                            </Styled(styled.button)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </header>
                  </StyledComponent>
                </Styled(styled.header)>
              </li>
              <styled.section>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jTzLTM",
                        "isStatic": false,
                        "lastClassName": "eOdEYu",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  padding: 1rem;

  ",
                          ".sc-VigVT",
                          " {
    margin: 0 0 0 1rem;
  }

  background-color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.section",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-jTzLTM",
                      "target": "section",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <section
                    className="sc-jTzLTM eOdEYu"
                  >
                    <label
                      htmlFor="collectorType"
                    >
                      Rule type:
                    </label>
                    <styled.select
                      id="ruleType"
                      name="ruleType"
                      onChange={[Function]}
                      value="ALLOW"
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-VigVT",
                              "isStatic": false,
                              "lastClassName": "gGEJMW",
                              "rules": Array [
                                "
  ",
                                "
  &::-ms-expand {
    display: none;
  }

  margin: 0 0 1rem;
  display: flex;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  padding: 0.5rem 2rem 0.5rem 0.5rem;
  border: 1px solid ",
                                [Function],
                                ";
  border-radius: 0;
  font: inherit;
  line-height: inherit;
  appearance: none;
  background-repeat: no-repeat;
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position: right 15px top 1em, right 10px top 1em;
  background-size: 5px 5px, 5px 5px;

  background-color: ",
                                [Function],
                                ";
  &:hover {
    cursor: ",
                                [Function],
                                ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                [Function],
                                ";
    box-shadow: 0 0 5px ",
                                [Function],
                                ";
  }
",
                                "
",
                              ],
                            },
                            "displayName": "styled.select",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-VigVT",
                            "target": "select",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        id="ruleType"
                        name="ruleType"
                        onChange={[Function]}
                        value="ALLOW"
                      >
                        <select
                          className="sc-VigVT gGEJMW"
                          id="ruleType"
                          name="ruleType"
                          onChange={[Function]}
                          value="ALLOW"
                        >
                          <option
                            value="select"
                          >
                            select...
                          </option>
                          <option
                            key="select-type-0"
                            value="ALLOW"
                          >
                            allow
                          </option>
                          <option
                            key="select-type-1"
                            value="CREATE"
                          >
                            create
                          </option>
                          <option
                            key="select-type-2"
                            value="DELETE"
                          >
                            delete
                          </option>
                          <option
                            key="select-type-3"
                            value="DISALLOW"
                          >
                            disallow
                          </option>
                          <option
                            key="select-type-4"
                            value="MATCH"
                          >
                            match
                          </option>
                          <option
                            key="select-type-5"
                            value="MODIFY"
                          >
                            modify
                          </option>
                          <option
                            key="select-type-6"
                            value="REQUIRE"
                          >
                            require
                          </option>
                        </select>
                      </StyledComponent>
                    </styled.select>
                  </section>
                </StyledComponent>
              </styled.section>
              <Styled(styled.div)
                alternateStyling={true}
              >
                <StyledComponent
                  alternateStyling={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-cSHVUG",
                        "isStatic": false,
                        "lastClassName": "bCTSvX",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
",
                          "
  display: flex;
  flex-direction: column;
  width: 100%;

  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "Styled(styled.div)",
                      "foldedComponentIds": Array [
                        "sc-gqjmRU",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-cSHVUG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-gqjmRU sc-cSHVUG bCTSvX"
                  >
                    <form
                      data-testhook-id="rule-edit-form"
                      onBlur={[Function]}
                      onSubmit={[Function]}
                    >
                      <FormInput
                        dataTesthookId="rule-edit-form-field-0"
                        disabled={false}
                        formType="text"
                        innerRef={
                          Object {
                            "current": <input
                              class="sc-bdVaJa iSgtnE"
                              data-testhook-id="rule-edit-form-field-0"
                              name="pattern"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        labelValue="Pattern*"
                        name="pattern"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "glCqXO",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-bxivhb glCqXO"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Pattern*
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.input
                                data-testhook-id="rule-edit-form-field-0"
                                disabled={false}
                                name="pattern"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-0"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "iSgtnE",
                                        "rules": Array [
                                          "
  ",
                                          "
  overflow: visible;
  box-sizing: border-box;
  height: ",
                                          [Function],
                                          ";
  margin: 0 0 1rem;
  padding: 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  background-color: ",
                                          [Function],
                                          ";
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  font-family: inherit;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: ",
                                          [Function],
                                          ";
  transition: box-shadow 0.5s, border-color 0.25s ease-in-out,
    -webkit-box-shadow 0.5s;

  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={
                                    Object {
                                      "current": <input
                                        class="sc-bdVaJa iSgtnE"
                                        data-testhook-id="rule-edit-form-field-0"
                                        name="pattern"
                                        type="text"
                                        value=""
                                      />,
                                    }
                                  }
                                  name="pattern"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="sc-bdVaJa iSgtnE"
                                    data-testhook-id="rule-edit-form-field-0"
                                    disabled={false}
                                    name="pattern"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </StyledComponent>
                              </styled.input>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormInput>
                      <styled.hr>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": false,
                                "lastClassName": "dMNJFD",
                                "rules": Array [
                                  "
  padding: 0;
  margin: 0 0 1rem;
  border: 0;
  border-bottom: 1px solid
    ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.hr",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "hr",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <hr
                            className="sc-bZQynM dMNJFD"
                          />
                        </StyledComponent>
                      </styled.hr>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gzVnrw",
                                "isStatic": false,
                                "lastClassName": "lbqsSV",
                                "rules": Array [
                                  "
  display: flex;
  flex-direction: row;
  flex-wrap: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gzVnrw",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-gzVnrw lbqsSV"
                          >
                            <LoaderButton
                              buttonType="button"
                              dataTesthookId="rule-edit-form-submit-button"
                              loading={false}
                              onMouseDown={[Function]}
                            >
                              <styled.button
                                data-testhook-id="rule-edit-form-submit-button"
                                onMouseDown={[Function]}
                                type="button"
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-submit-button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htoDjs",
                                        "isStatic": false,
                                        "lastClassName": "cCVfJH",
                                        "rules": Array [
                                          "
  ",
                                          "
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  line-height: 1;
  padding: 0.8rem 1rem;
  border: 1px solid transparent;
  text-align: center;
  font-size: 0.9rem;
  font-family: inherit;
  background-color: ",
                                          [Function],
                                          ";
  color: ",
                                          [Function],
                                          ";
  outline: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;

  &:hover {
    background-color: ",
                                          [Function],
                                          ";
    cursor: pointer;
  }
",
                                          "

  background-color: ",
                                          [Function],
                                          ";

  &:hover {
    background-color: ",
                                          [Function],
                                          ";
    cursor: ",
                                          [Function],
                                          "
  }
",
                                        ],
                                      },
                                      "displayName": "styled.button",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htoDjs",
                                      "target": "button",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onMouseDown={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="sc-htoDjs cCVfJH"
                                    data-testhook-id="rule-edit-form-submit-button"
                                    onMouseDown={[Function]}
                                    type="button"
                                  >
                                    Save
                                  </button>
                                </StyledComponent>
                              </styled.button>
                            </LoaderButton>
                            <Styled(Styled(styled.button))
                              data-testhook="cancel-button"
                              onMouseDown={[Function]}
                              type="button"
                            >
                              <StyledComponent
                                data-testhook="cancel-button"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jzJRlG",
                                      "isStatic": false,
                                      "lastClassName": "OVMAH",
                                      "rules": Array [
                                        "
  ",
                                        "
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  line-height: 1;
  padding: 0.8rem 1rem;
  border: 1px solid transparent;
  text-align: center;
  font-size: 0.9rem;
  font-family: inherit;
  background-color: ",
                                        [Function],
                                        ";
  color: ",
                                        [Function],
                                        ";
  outline: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;

  &:hover {
    background-color: ",
                                        [Function],
                                        ";
    cursor: pointer;
  }
",
                                        "

  background-color: ",
                                        [Function],
                                        ";

  &:hover {
    background-color: ",
                                        [Function],
                                        ";
    cursor: ",
                                        [Function],
                                        "
  }
",
                                        "
  background-color: ",
                                        [Function],
                                        ";
  color: ",
                                        [Function],
                                        ";
  border: ",
                                        [Function],
                                        ";

  &:hover {
    background-color: ",
                                        [Function],
                                        ";
    color: ",
                                        [Function],
                                        ";
    border: 1px solid ",
                                        [Function],
                                        ";
    cursor: pointer;
  }
",
                                        "
  margin-left: 1rem;
",
                                      ],
                                    },
                                    "displayName": "Styled(Styled(styled.button))",
                                    "foldedComponentIds": Array [
                                      "sc-htoDjs",
                                      "sc-gZMcBi",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-jzJRlG",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onMouseDown={[Function]}
                                type="button"
                              >
                                <button
                                  className="sc-htoDjs sc-gZMcBi sc-jzJRlG OVMAH"
                                  data-testhook="cancel-button"
                                  onMouseDown={[Function]}
                                  type="button"
                                >
                                  Cancel
                                </button>
                              </StyledComponent>
                            </Styled(Styled(styled.button))>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </form>
                  </div>
                </StyledComponent>
              </Styled(styled.div)>
            </ul>
          </StyledComponent>
        </styled.ul>
      </section>
    </StyledComponent>
  </Styled(styled.section)>
</RuleEditor>
`;

exports[`add rule expected end product 1`] = `
<RuleEditor
  addAction={21}
  editAction={23}
  initialRules={
    Array [
      Object {
        "destinationPathPrefix": "destinationPathPrefix",
        "destinationSegmentName": "seg1",
        "destinationStepName": "step1",
        "destinationType": "MATERIALS",
        "pattern": "pattern",
        "ruleType": "MATCH",
        "sourcePathPrefix": "sourcePathPrefix",
      },
    ]
  }
  removeAction={22}
  title="Expected End Products"
>
  <Styled(styled.section)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kEYyzF",
            "isStatic": false,
            "lastClassName": "iojSyD",
            "rules": Array [
              "
  margin: 2rem 0;
  display: flex;
  align-items: center;
  width: 100%;
  flex-direction: column;
  padding: 0 1rem 1rem;
  border: 1px solid ",
              [Function],
              ";

  background: ",
              [Function],
              ";

  li ~ li {
    margin-top: 1rem;
  }

  li ~ section {
    margin-top: 1rem;
  }
",
            ],
          },
          "displayName": "Styled(styled.section)",
          "foldedComponentIds": Array [
            "sc-kAzzGY",
          ],
          "render": [Function],
          "styledComponentId": "sc-kEYyzF",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <section
        className="sc-kAzzGY sc-kEYyzF iojSyD"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kpOJdX",
                  "isStatic": false,
                  "lastClassName": "kVlxUP",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kpOJdX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-kpOJdX kVlxUP"
            >
              <Styled(styled.header)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kkGfuU",
                        "isStatic": false,
                        "lastClassName": "gXTgbY",
                        "rules": Array [
                          "
  position: relative;
  display: inline-flex;
  font-size: 0.9rem;
  top: -1rem;
  color: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  padding: 0.25rem 2rem 0.4rem;
",
                        ],
                      },
                      "displayName": "Styled(styled.header)",
                      "foldedComponentIds": Array [
                        "sc-dxgOiQ",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kkGfuU",
                      "target": "header",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <header
                    className="sc-dxgOiQ sc-kkGfuU gXTgbY"
                  >
                    Expected End Products
                  </header>
                </StyledComponent>
              </Styled(styled.header)>
              <Styled(styled.button)
                data-testhook-id="add-rule"
                onClick={[Function]}
              >
                <StyledComponent
                  data-testhook-id="add-rule"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iAyFgw",
                        "isStatic": false,
                        "lastClassName": "RTKVq",
                        "rules": Array [
                          "
  position: relative;
  top: -1rem;
  border: 0;
  right: 0;

  &:hover {
    cursor: pointer;
    transform: scale(0.8);
  }

  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "Styled(styled.button)",
                      "foldedComponentIds": Array [
                        "sc-kGXeez",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iAyFgw",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <button
                    className="sc-kGXeez sc-iAyFgw RTKVq"
                    data-testhook-id="add-rule"
                    onClick={[Function]}
                  >
                    <PlusIcon
                      color="#1779ba"
                      size={24}
                    >
                      <svg
                        height={24}
                        version="1.1"
                        viewBox="0 0 32 32"
                        width={24}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <title>
                          plus
                        </title>
                        <path
                          d="M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z"
                          fill="#1779ba"
                        />
                      </svg>
                    </PlusIcon>
                  </button>
                </StyledComponent>
              </Styled(styled.button)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.ul>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jKJlTe",
                  "isStatic": false,
                  "lastClassName": "dKJUNv",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: 100%;

  li ~ ",
                    ".sc-cSHVUG",
                    " {
    margin-top: 1rem;
  }
",
                  ],
                },
                "displayName": "styled.ul",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jKJlTe",
                "target": "ul",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <ul
              className="sc-jKJlTe dKJUNv"
            >
              <li>
                <Styled(styled.header)
                  clickable={false}
                >
                  <StyledComponent
                    clickable={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-hSdWYo",
                          "isStatic": false,
                          "lastClassName": "kKngBj",
                          "rules": Array [
                            "
  border: 1px solid
    ",
                            [Function],
                            ";
  font-size: 1rem;
  padding: 0.5rem;
  width: 100%;
  background-color: ",
                            [Function],
                            ";
  display: flex;
  align-items: center;
  justify-content: space-between;

  span {
    margin: 0 0.5rem;
  }

  ",
                            ".sc-bdVaJa",
                            " {
    margin: 0;
  }

  ",
                            ".sc-bwzfXH",
                            " {
    margin: 0.5rem 0 0;
  }

  &:hover {
    ",
                            [Function],
                            ";
    border: 1px solid ",
                            [Function],
                            ";
  }
",
                          ],
                        },
                        "displayName": "Styled(styled.header)",
                        "foldedComponentIds": Array [
                          "sc-hMqMXs",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-hSdWYo",
                        "target": "header",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <header
                      className="sc-hMqMXs sc-hSdWYo kKngBj"
                    >
                      <styled.span>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-eNQAEJ",
                                "isStatic": false,
                                "lastClassName": "dhlUIc",
                                "rules": Array [
                                  "
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-eNQAEJ",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="sc-eNQAEJ dhlUIc"
                          >
                            match - pattern - destinationPathPrefix
                          </span>
                        </StyledComponent>
                      </styled.span>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-chPdSV",
                                "isStatic": false,
                                "lastClassName": "eWUxCg",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-chPdSV",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-chPdSV eWUxCg"
                          >
                            <Styled(styled.button)
                              data-testhook-id="edit-rule-0"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                data-testhook-id="edit-rule-0"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-cvbbAY",
                                      "isStatic": false,
                                      "lastClassName": "ExiAf",
                                      "rules": Array [
                                        "
  display: inline-flex;
  background: none;
  border: 0;

  &:hover {
    svg {
      cursor: pointer;
      transform: scale(0.8);
    }
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(styled.button)",
                                    "foldedComponentIds": Array [
                                      "sc-kgoBCf",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-cvbbAY",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="sc-kgoBCf sc-cvbbAY ExiAf"
                                  data-testhook-id="edit-rule-0"
                                  onClick={[Function]}
                                >
                                  <EditIcon
                                    color="#1779ba"
                                    size={26}
                                  >
                                    <svg
                                      height={26}
                                      version="1.1"
                                      viewBox="0 0 24 24"
                                      width={26}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M21.561 5.318l-2.879-2.879c-0.293-0.293-0.677-0.439-1.061-0.439-0.385 0-0.768 0.146-1.061 0.439l-3.56 3.561h-9c-0.552 0-1 0.447-1 1v13c0 0.553 0.448 1 1 1h13c0.552 0 1-0.447 1-1v-9l3.561-3.561c0.293-0.293 0.439-0.677 0.439-1.061s-0.146-0.767-0.439-1.060zM11.5 14.672l-2.172-2.172 6.293-6.293 2.172 2.172-6.293 6.293zM8.939 13.333l1.756 1.728-1.695-0.061-0.061-1.667zM16 19h-11v-11h6l-3.18 3.18c-0.293 0.293-0.478 0.812-0.629 1.289-0.16 0.5-0.191 1.056-0.191 1.47v3.061h3.061c0.414 0 1.108-0.1 1.571-0.29 0.464-0.19 0.896-0.347 1.188-0.64l3.18-3.070v6zM18.5 7.672l-2.172-2.172 1.293-1.293 2.171 2.172-1.292 1.293z"
                                        fill="#1779ba"
                                      />
                                    </svg>
                                  </EditIcon>
                                </button>
                              </StyledComponent>
                            </Styled(styled.button)>
                            <Styled(styled.button)
                              data-testhook-id="delete-rule-0"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                data-testhook-id="delete-rule-0"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-eHgmQL",
                                      "isStatic": false,
                                      "lastClassName": "yHvcD",
                                      "rules": Array [
                                        "
  display: inline-flex;
  background: none;
  border: 0;

  &:hover {
    svg {
      cursor: pointer;
      transform: scale(0.8);
    }
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(styled.button)",
                                    "foldedComponentIds": Array [
                                      "sc-kgoBCf",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-eHgmQL",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="sc-kgoBCf sc-eHgmQL yHvcD"
                                  data-testhook-id="delete-rule-0"
                                  onClick={[Function]}
                                >
                                  <RemoveIcon
                                    color="#1779ba"
                                    size={24}
                                  >
                                    <svg
                                      height={24}
                                      version="1.1"
                                      viewBox="0 0 32 32"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <title>
                                        trash
                                      </title>
                                      <path
                                        d="M29.98 6.819c-0.096-1.57-1.387-2.816-2.98-2.816h-3v-1.002c0-1.657-1.344-3-3-3h-10c-1.657 0-3 1.343-3 3v1.001h-3c-1.595 0-2.885 1.246-2.981 2.816h-0.019v2.183c0 1.104 0.896 2 2 2v0 17c0 2.209 1.791 4 4 4h16c2.209 0 4-1.791 4-4v-17c1.104 0 2-0.896 2-2v-2.182h-0.020zM10 3.002c0-0.553 0.447-1 1-1h10c0.553 0 1 0.447 1 1v1h-12v-1zM26 28.002c0 1.102-0.898 2-2 2h-16c-1.103 0-2-0.898-2-2v-17h20v17zM28 8.001v1h-24v-1.999c0-0.553 0.447-1 1-1h22c0.553 0 1 0.447 1 1v0.999zM9 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM9 14.005h2v13h-2v-13zM15 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM15 14.005h2v13h-2v-13zM21 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM21 14.005h2v13h-2v-13z"
                                        fill="#1779ba"
                                      />
                                    </svg>
                                  </RemoveIcon>
                                </button>
                              </StyledComponent>
                            </Styled(styled.button)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </header>
                  </StyledComponent>
                </Styled(styled.header)>
              </li>
              <Styled(styled.div)
                alternateStyling={true}
              >
                <StyledComponent
                  alternateStyling={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-cSHVUG",
                        "isStatic": false,
                        "lastClassName": "bCTSvX",
                        "rules": Array [
                          "
  display: flex;
  flex-direction: column;
",
                          "
  display: flex;
  flex-direction: column;
  width: 100%;

  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "Styled(styled.div)",
                      "foldedComponentIds": Array [
                        "sc-gqjmRU",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-cSHVUG",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-gqjmRU sc-cSHVUG bCTSvX"
                  >
                    <form
                      data-testhook-id="rule-edit-form"
                      onBlur={[Function]}
                      onSubmit={[Function]}
                    >
                      <FormInput
                        dataTesthookId="rule-edit-form-field-0"
                        disabled={false}
                        formType="text"
                        innerRef={
                          Object {
                            "current": <input
                              class="sc-bdVaJa iSgtnE"
                              data-testhook-id="rule-edit-form-field-0"
                              name="pattern"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        labelValue="Pattern*"
                        name="pattern"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "glCqXO",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-bxivhb glCqXO"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Pattern*
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.input
                                data-testhook-id="rule-edit-form-field-0"
                                disabled={false}
                                name="pattern"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-0"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "iSgtnE",
                                        "rules": Array [
                                          "
  ",
                                          "
  overflow: visible;
  box-sizing: border-box;
  height: ",
                                          [Function],
                                          ";
  margin: 0 0 1rem;
  padding: 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  background-color: ",
                                          [Function],
                                          ";
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  font-family: inherit;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: ",
                                          [Function],
                                          ";
  transition: box-shadow 0.5s, border-color 0.25s ease-in-out,
    -webkit-box-shadow 0.5s;

  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={
                                    Object {
                                      "current": <input
                                        class="sc-bdVaJa iSgtnE"
                                        data-testhook-id="rule-edit-form-field-0"
                                        name="pattern"
                                        type="text"
                                        value=""
                                      />,
                                    }
                                  }
                                  name="pattern"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="sc-bdVaJa iSgtnE"
                                    data-testhook-id="rule-edit-form-field-0"
                                    disabled={false}
                                    name="pattern"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </StyledComponent>
                              </styled.input>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormInput>
                      <FormInput
                        dataTesthookId="rule-edit-form-field-1"
                        disabled={false}
                        formType="text"
                        labelValue="Source Path Prefix"
                        name="sourcePathPrefix"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "glCqXO",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-bxivhb glCqXO"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Source Path Prefix
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.input
                                data-testhook-id="rule-edit-form-field-1"
                                disabled={false}
                                name="sourcePathPrefix"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-1"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "iSgtnE",
                                        "rules": Array [
                                          "
  ",
                                          "
  overflow: visible;
  box-sizing: border-box;
  height: ",
                                          [Function],
                                          ";
  margin: 0 0 1rem;
  padding: 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  background-color: ",
                                          [Function],
                                          ";
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  font-family: inherit;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: ",
                                          [Function],
                                          ";
  transition: box-shadow 0.5s, border-color 0.25s ease-in-out,
    -webkit-box-shadow 0.5s;

  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="sourcePathPrefix"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="sc-bdVaJa iSgtnE"
                                    data-testhook-id="rule-edit-form-field-1"
                                    disabled={false}
                                    name="sourcePathPrefix"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </StyledComponent>
                              </styled.input>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormInput>
                      <FormInput
                        dataTesthookId="rule-edit-form-field-2"
                        disabled={false}
                        formType="text"
                        labelValue="Destination Path Prefix"
                        name="destinationPathPrefix"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "glCqXO",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-bxivhb glCqXO"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Destination Path Prefix
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.input
                                data-testhook-id="rule-edit-form-field-2"
                                disabled={false}
                                name="destinationPathPrefix"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-2"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "iSgtnE",
                                        "rules": Array [
                                          "
  ",
                                          "
  overflow: visible;
  box-sizing: border-box;
  height: ",
                                          [Function],
                                          ";
  margin: 0 0 1rem;
  padding: 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  background-color: ",
                                          [Function],
                                          ";
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  font-family: inherit;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: ",
                                          [Function],
                                          ";
  transition: box-shadow 0.5s, border-color 0.25s ease-in-out,
    -webkit-box-shadow 0.5s;

  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.input",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="destinationPathPrefix"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="sc-bdVaJa iSgtnE"
                                    data-testhook-id="rule-edit-form-field-2"
                                    disabled={false}
                                    name="destinationPathPrefix"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </StyledComponent>
                              </styled.input>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormInput>
                      <FormSelect
                        dataTesthookId="rule-edit-form-field-3"
                        disabled={false}
                        formType="select"
                        labelValue="Destination Type*"
                        name="destinationType"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-fjdhpX",
                                  "isStatic": false,
                                  "lastClassName": "kEvzkS",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-fjdhpX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-fjdhpX kEvzkS"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Destination Type*
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.select
                                data-testhook-id="rule-edit-form-field-3"
                                disabled={false}
                                name="destinationType"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-3"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-VigVT",
                                        "isStatic": false,
                                        "lastClassName": "gGEJMW",
                                        "rules": Array [
                                          "
  ",
                                          "
  &::-ms-expand {
    display: none;
  }

  margin: 0 0 1rem;
  display: flex;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  padding: 0.5rem 2rem 0.5rem 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  font: inherit;
  line-height: inherit;
  appearance: none;
  background-repeat: no-repeat;
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position: right 15px top 1em, right 10px top 1em;
  background-size: 5px 5px, 5px 5px;

  background-color: ",
                                          [Function],
                                          ";
  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.select",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-VigVT",
                                      "target": "select",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="destinationType"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <select
                                    className="sc-VigVT gGEJMW"
                                    data-testhook-id="rule-edit-form-field-3"
                                    disabled={false}
                                    name="destinationType"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <option
                                      label="Select ..."
                                      value=""
                                    />
                                    <option
                                      key="rule-edit-form-field-0-option-0"
                                      label="products"
                                      value="PRODUCTS"
                                    />
                                    <option
                                      key="rule-edit-form-field-1-option-1"
                                      label="materials"
                                      value="MATERIALS"
                                    />
                                  </select>
                                </StyledComponent>
                              </styled.select>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormSelect>
                      <FormSelect
                        dataTesthookId="rule-edit-form-field-4"
                        disabled={false}
                        formType="select"
                        labelValue="Destination Segment Name*"
                        name="destinationSegmentName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-fjdhpX",
                                  "isStatic": false,
                                  "lastClassName": "kEvzkS",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-fjdhpX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-fjdhpX kEvzkS"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Destination Segment Name*
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.select
                                data-testhook-id="rule-edit-form-field-4"
                                disabled={false}
                                name="destinationSegmentName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-4"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-VigVT",
                                        "isStatic": false,
                                        "lastClassName": "gGEJMW",
                                        "rules": Array [
                                          "
  ",
                                          "
  &::-ms-expand {
    display: none;
  }

  margin: 0 0 1rem;
  display: flex;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  padding: 0.5rem 2rem 0.5rem 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  font: inherit;
  line-height: inherit;
  appearance: none;
  background-repeat: no-repeat;
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position: right 15px top 1em, right 10px top 1em;
  background-size: 5px 5px, 5px 5px;

  background-color: ",
                                          [Function],
                                          ";
  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.select",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-VigVT",
                                      "target": "select",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="destinationSegmentName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <select
                                    className="sc-VigVT gGEJMW"
                                    data-testhook-id="rule-edit-form-field-4"
                                    disabled={false}
                                    name="destinationSegmentName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <option
                                      label="Select ..."
                                      value=""
                                    />
                                    <option
                                      key="rule-edit-form-field-0-option-0"
                                      label="seg1"
                                      value="seg1"
                                    />
                                    <option
                                      key="rule-edit-form-field-1-option-1"
                                      label="seg2"
                                      value="seg2"
                                    />
                                  </select>
                                </StyledComponent>
                              </styled.select>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormSelect>
                      <FormSelect
                        dataTesthookId="rule-edit-form-field-5"
                        disabled={false}
                        formType="select"
                        labelValue="Destination Step Name*"
                        name="destinationStepName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-fjdhpX",
                                  "isStatic": false,
                                  "lastClassName": "kEvzkS",
                                  "rules": Array [
                                    "
  display: flex;
  flex-direction: column;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-fjdhpX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="sc-fjdhpX kEvzkS"
                            >
                              <styled.label>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "hiNtKU",
                                        "rules": Array [
                                          "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: ",
                                          [Function],
                                          ";
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <label
                                    className="sc-htpNat hiNtKU"
                                  >
                                    Destination Step Name*
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <styled.select
                                data-testhook-id="rule-edit-form-field-5"
                                disabled={false}
                                name="destinationStepName"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-field-5"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-VigVT",
                                        "isStatic": false,
                                        "lastClassName": "gGEJMW",
                                        "rules": Array [
                                          "
  ",
                                          "
  &::-ms-expand {
    display: none;
  }

  margin: 0 0 1rem;
  display: flex;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  padding: 0.5rem 2rem 0.5rem 0.5rem;
  border: 1px solid ",
                                          [Function],
                                          ";
  border-radius: 0;
  font: inherit;
  line-height: inherit;
  appearance: none;
  background-repeat: no-repeat;
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
    linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position: right 15px top 1em, right 10px top 1em;
  background-size: 5px 5px, 5px 5px;

  background-color: ",
                                          [Function],
                                          ";
  &:hover {
    cursor: ",
                                          [Function],
                                          ";
  }

  &:focus {
    outline: none;
    border: 1px solid ",
                                          [Function],
                                          ";
    box-shadow: 0 0 5px ",
                                          [Function],
                                          ";
  }
",
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.select",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-VigVT",
                                      "target": "select",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  name="destinationStepName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <select
                                    className="sc-VigVT gGEJMW"
                                    data-testhook-id="rule-edit-form-field-5"
                                    disabled={false}
                                    name="destinationStepName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <option
                                      label="Select ..."
                                      value=""
                                    />
                                  </select>
                                </StyledComponent>
                              </styled.select>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </FormSelect>
                      <styled.hr>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": false,
                                "lastClassName": "dMNJFD",
                                "rules": Array [
                                  "
  padding: 0;
  margin: 0 0 1rem;
  border: 0;
  border-bottom: 1px solid
    ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.hr",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "hr",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <hr
                            className="sc-bZQynM dMNJFD"
                          />
                        </StyledComponent>
                      </styled.hr>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-gzVnrw",
                                "isStatic": false,
                                "lastClassName": "lbqsSV",
                                "rules": Array [
                                  "
  display: flex;
  flex-direction: row;
  flex-wrap: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-gzVnrw",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-gzVnrw lbqsSV"
                          >
                            <LoaderButton
                              buttonType="button"
                              dataTesthookId="rule-edit-form-submit-button"
                              loading={false}
                              onMouseDown={[Function]}
                            >
                              <styled.button
                                data-testhook-id="rule-edit-form-submit-button"
                                onMouseDown={[Function]}
                                type="button"
                              >
                                <StyledComponent
                                  data-testhook-id="rule-edit-form-submit-button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htoDjs",
                                        "isStatic": false,
                                        "lastClassName": "cCVfJH",
                                        "rules": Array [
                                          "
  ",
                                          "
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  line-height: 1;
  padding: 0.8rem 1rem;
  border: 1px solid transparent;
  text-align: center;
  font-size: 0.9rem;
  font-family: inherit;
  background-color: ",
                                          [Function],
                                          ";
  color: ",
                                          [Function],
                                          ";
  outline: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;

  &:hover {
    background-color: ",
                                          [Function],
                                          ";
    cursor: pointer;
  }
",
                                          "

  background-color: ",
                                          [Function],
                                          ";

  &:hover {
    background-color: ",
                                          [Function],
                                          ";
    cursor: ",
                                          [Function],
                                          "
  }
",
                                        ],
                                      },
                                      "displayName": "styled.button",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htoDjs",
                                      "target": "button",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onMouseDown={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="sc-htoDjs cCVfJH"
                                    data-testhook-id="rule-edit-form-submit-button"
                                    onMouseDown={[Function]}
                                    type="button"
                                  >
                                    Save
                                  </button>
                                </StyledComponent>
                              </styled.button>
                            </LoaderButton>
                            <Styled(Styled(styled.button))
                              data-testhook="cancel-button"
                              onMouseDown={[Function]}
                              type="button"
                            >
                              <StyledComponent
                                data-testhook="cancel-button"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jzJRlG",
                                      "isStatic": false,
                                      "lastClassName": "OVMAH",
                                      "rules": Array [
                                        "
  ",
                                        "
  display: inline-block;
  vertical-align: middle;
  margin: 0 0 1rem 0;
  line-height: 1;
  padding: 0.8rem 1rem;
  border: 1px solid transparent;
  text-align: center;
  font-size: 0.9rem;
  font-family: inherit;
  background-color: ",
                                        [Function],
                                        ";
  color: ",
                                        [Function],
                                        ";
  outline: 0;
  transition: background-color 0.25s ease-out, color 0.25s ease-out;

  &:hover {
    background-color: ",
                                        [Function],
                                        ";
    cursor: pointer;
  }
",
                                        "

  background-color: ",
                                        [Function],
                                        ";

  &:hover {
    background-color: ",
                                        [Function],
                                        ";
    cursor: ",
                                        [Function],
                                        "
  }
",
                                        "
  background-color: ",
                                        [Function],
                                        ";
  color: ",
                                        [Function],
                                        ";
  border: ",
                                        [Function],
                                        ";

  &:hover {
    background-color: ",
                                        [Function],
                                        ";
    color: ",
                                        [Function],
                                        ";
    border: 1px solid ",
                                        [Function],
                                        ";
    cursor: pointer;
  }
",
                                        "
  margin-left: 1rem;
",
                                      ],
                                    },
                                    "displayName": "Styled(Styled(styled.button))",
                                    "foldedComponentIds": Array [
                                      "sc-htoDjs",
                                      "sc-gZMcBi",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-jzJRlG",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onMouseDown={[Function]}
                                type="button"
                              >
                                <button
                                  className="sc-htoDjs sc-gZMcBi sc-jzJRlG OVMAH"
                                  data-testhook="cancel-button"
                                  onMouseDown={[Function]}
                                  type="button"
                                >
                                  Cancel
                                </button>
                              </StyledComponent>
                            </Styled(Styled(styled.button))>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </form>
                  </div>
                </StyledComponent>
              </Styled(styled.div)>
            </ul>
          </StyledComponent>
        </styled.ul>
      </section>
    </StyledComponent>
  </Styled(styled.section)>
</RuleEditor>
`;

exports[`renders correctly 1`] = `
<RuleEditor
  addAction={21}
  editAction={23}
  initialRules={
    Array [
      Object {
        "destinationPathPrefix": "destinationPathPrefix",
        "destinationSegmentName": "seg1",
        "destinationStepName": "step1",
        "destinationType": "MATERIALS",
        "pattern": "pattern",
        "ruleType": "MATCH",
        "sourcePathPrefix": "sourcePathPrefix",
      },
    ]
  }
  removeAction={22}
  title="Expected End Products"
>
  <Styled(styled.section)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kEYyzF",
            "isStatic": false,
            "lastClassName": "iojSyD",
            "rules": Array [
              "
  margin: 2rem 0;
  display: flex;
  align-items: center;
  width: 100%;
  flex-direction: column;
  padding: 0 1rem 1rem;
  border: 1px solid ",
              [Function],
              ";

  background: ",
              [Function],
              ";

  li ~ li {
    margin-top: 1rem;
  }

  li ~ section {
    margin-top: 1rem;
  }
",
            ],
          },
          "displayName": "Styled(styled.section)",
          "foldedComponentIds": Array [
            "sc-kAzzGY",
          ],
          "render": [Function],
          "styledComponentId": "sc-kEYyzF",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <section
        className="sc-kAzzGY sc-kEYyzF iojSyD"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kpOJdX",
                  "isStatic": false,
                  "lastClassName": "kVlxUP",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kpOJdX",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-kpOJdX kVlxUP"
            >
              <Styled(styled.header)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kkGfuU",
                        "isStatic": false,
                        "lastClassName": "gXTgbY",
                        "rules": Array [
                          "
  position: relative;
  display: inline-flex;
  font-size: 0.9rem;
  top: -1rem;
  color: ",
                          [Function],
                          ";
  background-color: ",
                          [Function],
                          ";
  padding: 0.25rem 2rem 0.4rem;
",
                        ],
                      },
                      "displayName": "Styled(styled.header)",
                      "foldedComponentIds": Array [
                        "sc-dxgOiQ",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-kkGfuU",
                      "target": "header",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <header
                    className="sc-dxgOiQ sc-kkGfuU gXTgbY"
                  >
                    Expected End Products
                  </header>
                </StyledComponent>
              </Styled(styled.header)>
              <Styled(styled.button)
                data-testhook-id="add-rule"
                onClick={[Function]}
              >
                <StyledComponent
                  data-testhook-id="add-rule"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-iAyFgw",
                        "isStatic": false,
                        "lastClassName": "RTKVq",
                        "rules": Array [
                          "
  position: relative;
  top: -1rem;
  border: 0;
  right: 0;

  &:hover {
    cursor: pointer;
    transform: scale(0.8);
  }

  ",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "Styled(styled.button)",
                      "foldedComponentIds": Array [
                        "sc-kGXeez",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-iAyFgw",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <button
                    className="sc-kGXeez sc-iAyFgw RTKVq"
                    data-testhook-id="add-rule"
                    onClick={[Function]}
                  >
                    <PlusIcon
                      color="#1779ba"
                      size={24}
                    >
                      <svg
                        height={24}
                        version="1.1"
                        viewBox="0 0 32 32"
                        width={24}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <title>
                          plus
                        </title>
                        <path
                          d="M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z"
                          fill="#1779ba"
                        />
                      </svg>
                    </PlusIcon>
                  </button>
                </StyledComponent>
              </Styled(styled.button)>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.ul>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jKJlTe",
                  "isStatic": false,
                  "lastClassName": "dKJUNv",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: column;
  width: 100%;

  li ~ ",
                    ".sc-cSHVUG",
                    " {
    margin-top: 1rem;
  }
",
                  ],
                },
                "displayName": "styled.ul",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jKJlTe",
                "target": "ul",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <ul
              className="sc-jKJlTe dKJUNv"
            >
              <li>
                <Styled(styled.header)
                  clickable={false}
                >
                  <StyledComponent
                    clickable={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-hSdWYo",
                          "isStatic": false,
                          "lastClassName": "kKngBj",
                          "rules": Array [
                            "
  border: 1px solid
    ",
                            [Function],
                            ";
  font-size: 1rem;
  padding: 0.5rem;
  width: 100%;
  background-color: ",
                            [Function],
                            ";
  display: flex;
  align-items: center;
  justify-content: space-between;

  span {
    margin: 0 0.5rem;
  }

  ",
                            ".sc-bdVaJa",
                            " {
    margin: 0;
  }

  ",
                            ".sc-bwzfXH",
                            " {
    margin: 0.5rem 0 0;
  }

  &:hover {
    ",
                            [Function],
                            ";
    border: 1px solid ",
                            [Function],
                            ";
  }
",
                          ],
                        },
                        "displayName": "Styled(styled.header)",
                        "foldedComponentIds": Array [
                          "sc-hMqMXs",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-hSdWYo",
                        "target": "header",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <header
                      className="sc-hMqMXs sc-hSdWYo kKngBj"
                    >
                      <styled.span>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-eNQAEJ",
                                "isStatic": false,
                                "lastClassName": "dhlUIc",
                                "rules": Array [
                                  "
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
",
                                ],
                              },
                              "displayName": "styled.span",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-eNQAEJ",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="sc-eNQAEJ dhlUIc"
                          >
                            match - pattern - destinationPathPrefix
                          </span>
                        </StyledComponent>
                      </styled.span>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-chPdSV",
                                "isStatic": false,
                                "lastClassName": "eWUxCg",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-chPdSV",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="sc-chPdSV eWUxCg"
                          >
                            <Styled(styled.button)
                              data-testhook-id="edit-rule-0"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                data-testhook-id="edit-rule-0"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-cvbbAY",
                                      "isStatic": false,
                                      "lastClassName": "ExiAf",
                                      "rules": Array [
                                        "
  display: inline-flex;
  background: none;
  border: 0;

  &:hover {
    svg {
      cursor: pointer;
      transform: scale(0.8);
    }
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(styled.button)",
                                    "foldedComponentIds": Array [
                                      "sc-kgoBCf",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-cvbbAY",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="sc-kgoBCf sc-cvbbAY ExiAf"
                                  data-testhook-id="edit-rule-0"
                                  onClick={[Function]}
                                >
                                  <EditIcon
                                    color="#1779ba"
                                    size={26}
                                  >
                                    <svg
                                      height={26}
                                      version="1.1"
                                      viewBox="0 0 24 24"
                                      width={26}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M21.561 5.318l-2.879-2.879c-0.293-0.293-0.677-0.439-1.061-0.439-0.385 0-0.768 0.146-1.061 0.439l-3.56 3.561h-9c-0.552 0-1 0.447-1 1v13c0 0.553 0.448 1 1 1h13c0.552 0 1-0.447 1-1v-9l3.561-3.561c0.293-0.293 0.439-0.677 0.439-1.061s-0.146-0.767-0.439-1.060zM11.5 14.672l-2.172-2.172 6.293-6.293 2.172 2.172-6.293 6.293zM8.939 13.333l1.756 1.728-1.695-0.061-0.061-1.667zM16 19h-11v-11h6l-3.18 3.18c-0.293 0.293-0.478 0.812-0.629 1.289-0.16 0.5-0.191 1.056-0.191 1.47v3.061h3.061c0.414 0 1.108-0.1 1.571-0.29 0.464-0.19 0.896-0.347 1.188-0.64l3.18-3.070v6zM18.5 7.672l-2.172-2.172 1.293-1.293 2.171 2.172-1.292 1.293z"
                                        fill="#1779ba"
                                      />
                                    </svg>
                                  </EditIcon>
                                </button>
                              </StyledComponent>
                            </Styled(styled.button)>
                            <Styled(styled.button)
                              data-testhook-id="delete-rule-0"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                data-testhook-id="delete-rule-0"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-eHgmQL",
                                      "isStatic": false,
                                      "lastClassName": "yHvcD",
                                      "rules": Array [
                                        "
  display: inline-flex;
  background: none;
  border: 0;

  &:hover {
    svg {
      cursor: pointer;
      transform: scale(0.8);
    }
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(styled.button)",
                                    "foldedComponentIds": Array [
                                      "sc-kgoBCf",
                                    ],
                                    "render": [Function],
                                    "styledComponentId": "sc-eHgmQL",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <button
                                  className="sc-kgoBCf sc-eHgmQL yHvcD"
                                  data-testhook-id="delete-rule-0"
                                  onClick={[Function]}
                                >
                                  <RemoveIcon
                                    color="#1779ba"
                                    size={24}
                                  >
                                    <svg
                                      height={24}
                                      version="1.1"
                                      viewBox="0 0 32 32"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <title>
                                        trash
                                      </title>
                                      <path
                                        d="M29.98 6.819c-0.096-1.57-1.387-2.816-2.98-2.816h-3v-1.002c0-1.657-1.344-3-3-3h-10c-1.657 0-3 1.343-3 3v1.001h-3c-1.595 0-2.885 1.246-2.981 2.816h-0.019v2.183c0 1.104 0.896 2 2 2v0 17c0 2.209 1.791 4 4 4h16c2.209 0 4-1.791 4-4v-17c1.104 0 2-0.896 2-2v-2.182h-0.020zM10 3.002c0-0.553 0.447-1 1-1h10c0.553 0 1 0.447 1 1v1h-12v-1zM26 28.002c0 1.102-0.898 2-2 2h-16c-1.103 0-2-0.898-2-2v-17h20v17zM28 8.001v1h-24v-1.999c0-0.553 0.447-1 1-1h22c0.553 0 1 0.447 1 1v0.999zM9 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM9 14.005h2v13h-2v-13zM15 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM15 14.005h2v13h-2v-13zM21 28.006h2c0.553 0 1-0.447 1-1v-13c0-0.553-0.447-1-1-1h-2c-0.553 0-1 0.447-1 1v13c0 0.553 0.447 1 1 1zM21 14.005h2v13h-2v-13z"
                                        fill="#1779ba"
                                      />
                                    </svg>
                                  </RemoveIcon>
                                </button>
                              </StyledComponent>
                            </Styled(styled.button)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </header>
                  </StyledComponent>
                </Styled(styled.header)>
              </li>
            </ul>
          </StyledComponent>
        </styled.ul>
      </section>
    </StyledComponent>
  </Styled(styled.section)>
</RuleEditor>
`;
