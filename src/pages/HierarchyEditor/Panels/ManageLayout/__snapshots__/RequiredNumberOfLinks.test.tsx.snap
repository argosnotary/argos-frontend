// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RequiredNumberOfLinks>
  <Styled(styled.div)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-jzJRlG",
            "isStatic": false,
            "lastClassName": "jNQHJE",
            "rules": Array [
              "
  display: flex;
  flex-direction: column;
",
              "
  display: flex;
  flex-direction: column;
  width: 100%;
",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-gqjmRU",
          ],
          "render": [Function],
          "styledComponentId": "sc-jzJRlG",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-gqjmRU sc-jzJRlG jNQHJE"
      >
        <form
          data-testhook-id="required-number-of-links-form"
          onBlur={[Function]}
          onSubmit={[Function]}
        >
          <FormInput
            dataTesthookId="required-number-of-links-form-field-0"
            disabled={false}
            formType="text"
            innerRef={
              Object {
                "current": <input
                  class="sc-bdVaJa iSgtnE"
                  data-testhook-id="required-number-of-links-form-field-0"
                  name="requiredNumberOfLinks"
                  type="text"
                  value="12"
                />,
              }
            }
            labelValue="Required Number Of Links*"
            name="requiredNumberOfLinks"
            onBlur={[Function]}
            onChange={[Function]}
            value="12"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "dePyzG",
                      "rules": Array [
                        "
  display: flex;
  flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="sc-htpNat dePyzG"
                >
                  <styled.label>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "iGGvEu",
                            "rules": Array [
                              "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: #0a0a0a;
",
                            ],
                          },
                          "displayName": "styled.label",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "label",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <label
                        className="sc-bwzfXH iGGvEu"
                      >
                        Required Number Of Links*
                      </label>
                    </StyledComponent>
                  </styled.label>
                  <styled.input
                    data-testhook-id="required-number-of-links-form-field-0"
                    disabled={false}
                    name="requiredNumberOfLinks"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value="12"
                  >
                    <StyledComponent
                      data-testhook-id="required-number-of-links-form-field-0"
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "iSgtnE",
                            "rules": Array [
                              "
  ",
                              "
  overflow: visible;
  box-sizing: border-box;
  height: ",
                              [Function],
                              ";
  margin: 0 0 1rem;
  padding: 0.5rem;
  border: 1px solid #cacaca;
  border-radius: 0;
  background-color: ",
                              [Function],
                              ";
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  font-family: inherit;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  transition: box-shadow 0.5s, border-color 0.25s ease-in-out,
    -webkit-box-shadow 0.5s;

  &:hover {
    cursor: ",
                              [Function],
                              ";
  }

  &:focus {
    outline: none;
    border: 1px solid #8a8a8a;
    box-shadow: 0 0 5px #cacaca;
  }
",
                              "
",
                            ],
                          },
                          "displayName": "styled.input",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "input",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={
                        Object {
                          "current": <input
                            class="sc-bdVaJa iSgtnE"
                            data-testhook-id="required-number-of-links-form-field-0"
                            name="requiredNumberOfLinks"
                            type="text"
                            value="12"
                          />,
                        }
                      }
                      name="requiredNumberOfLinks"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="text"
                      value="12"
                    >
                      <input
                        className="sc-bdVaJa iSgtnE"
                        data-testhook-id="required-number-of-links-form-field-0"
                        disabled={false}
                        name="requiredNumberOfLinks"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="text"
                        value="12"
                      />
                    </StyledComponent>
                  </styled.input>
                </div>
              </StyledComponent>
            </styled.div>
          </FormInput>
        </form>
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</RequiredNumberOfLinks>
`;

exports[`update required number of links 1`] = `
<RequiredNumberOfLinks>
  <Styled(styled.div)>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-jzJRlG",
            "isStatic": false,
            "lastClassName": "jNQHJE",
            "rules": Array [
              "
  display: flex;
  flex-direction: column;
",
              "
  display: flex;
  flex-direction: column;
  width: 100%;
",
            ],
          },
          "displayName": "Styled(styled.div)",
          "foldedComponentIds": Array [
            "sc-gqjmRU",
          ],
          "render": [Function],
          "styledComponentId": "sc-jzJRlG",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-gqjmRU sc-jzJRlG jNQHJE"
      >
        <form
          data-testhook-id="required-number-of-links-form"
          onBlur={[Function]}
          onSubmit={[Function]}
        >
          <FormInput
            dataTesthookId="required-number-of-links-form-field-0"
            disabled={false}
            formType="text"
            innerRef={
              Object {
                "current": <input
                  class="sc-bdVaJa iSgtnE"
                  data-testhook-id="required-number-of-links-form-field-0"
                  name="requiredNumberOfLinks"
                  type="text"
                  value="12"
                />,
              }
            }
            labelValue="Required Number Of Links*"
            name="requiredNumberOfLinks"
            onBlur={[Function]}
            onChange={[Function]}
            value="12"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": false,
                      "lastClassName": "dePyzG",
                      "rules": Array [
                        "
  display: flex;
  flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="sc-htpNat dePyzG"
                >
                  <styled.label>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "iGGvEu",
                            "rules": Array [
                              "
  font-size: 0.875rem;
  font-weight: normal;
  line-height: 1.8;
  color: #0a0a0a;
",
                            ],
                          },
                          "displayName": "styled.label",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "label",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <label
                        className="sc-bwzfXH iGGvEu"
                      >
                        Required Number Of Links*
                      </label>
                    </StyledComponent>
                  </styled.label>
                  <styled.input
                    data-testhook-id="required-number-of-links-form-field-0"
                    disabled={false}
                    name="requiredNumberOfLinks"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value="12"
                  >
                    <StyledComponent
                      data-testhook-id="required-number-of-links-form-field-0"
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "iSgtnE",
                            "rules": Array [
                              "
  ",
                              "
  overflow: visible;
  box-sizing: border-box;
  height: ",
                              [Function],
                              ";
  margin: 0 0 1rem;
  padding: 0.5rem;
  border: 1px solid #cacaca;
  border-radius: 0;
  background-color: ",
                              [Function],
                              ";
  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
  font-family: inherit;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: #0a0a0a;
  transition: box-shadow 0.5s, border-color 0.25s ease-in-out,
    -webkit-box-shadow 0.5s;

  &:hover {
    cursor: ",
                              [Function],
                              ";
  }

  &:focus {
    outline: none;
    border: 1px solid #8a8a8a;
    box-shadow: 0 0 5px #cacaca;
  }
",
                              "
",
                            ],
                          },
                          "displayName": "styled.input",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "input",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={
                        Object {
                          "current": <input
                            class="sc-bdVaJa iSgtnE"
                            data-testhook-id="required-number-of-links-form-field-0"
                            name="requiredNumberOfLinks"
                            type="text"
                            value="12"
                          />,
                        }
                      }
                      name="requiredNumberOfLinks"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="text"
                      value="12"
                    >
                      <input
                        className="sc-bdVaJa iSgtnE"
                        data-testhook-id="required-number-of-links-form-field-0"
                        disabled={false}
                        name="requiredNumberOfLinks"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="text"
                        value="12"
                      />
                    </StyledComponent>
                  </styled.input>
                </div>
              </StyledComponent>
            </styled.div>
          </FormInput>
        </form>
      </div>
    </StyledComponent>
  </Styled(styled.div)>
</RequiredNumberOfLinks>
`;
